name: Construction d'un projet

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  create-folder:
    name: Création du dossier
    runs-on: ubuntu-latest
    steps:
      - name: Créer le dossier sur la machine distante
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: mkdir -p /opt/app/garage/ms-garage

  build:
    runs-on: ubuntu-latest
    needs: create-folder
    steps:
      - name: Téléchargement des sources
        uses: actions/checkout@v4
      - name: Configuration de JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Construction avec Maven
        run: mvn -Dmaven.test.skip=true -B package --file pom.xml
      - name: Renommer le fichier JAR
        run: mv target/*.jar target/mnsgarage.jar

      # OR (Option 2)
      - name: Ajouter les propriétés JDBC au JAR (Option 2)
        # Option 2: Use a separate configuration file
        run: |
          cat << EOF >> src/main/resources/application.properties
          # JDBC properties for MySQL database
          spring.datasource.url=jdbc:mysql://89.116.38.79:80/apirest
          spring.datasource.username=root
          spring.datasource.password=root
          EOF
          # Replace placeholders with actual values

  run-jar:
    name: Exécution du JAR
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Exécuter le JAR sur le serveur
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cp /opt/app/garage/ms-garage/mnsgarage.jar /opt/app/garage/ms-garage
            java -jar /opt/app/garage/ms-garage/mnsgarage.jar
          
          

          #name: Construction d'un projet
#
#on:
#  push:
#    branches: ["master"]
#  workflow_dispatch:
#
#jobs:
#  create-folder:
#    name: Création du dossier
#    runs-on: ubuntu-latest
#    steps:
#      - name: Créer le dossier sur la machine distante
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.PORT }}
#          script: mkdir -p /opt/app/garage/ms-garage
#
#  build:
#    runs-on: ubuntu-latest
#    needs: create-folder
#    steps:
#      - name: Téléchargement des sources
#        uses: actions/checkout@v4
#      - name: Configuration de JDK 21
#        uses: actions/setup-java@v3
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#          cache: maven
#      - name: Construction avec Maven
#        run: mvn -Dmaven.test.skip=true -B package --file pom.xml
#      - name: Renommer le fichier JAR
#        run: mv target/*.jar target/mnsgarage.jar
#      - name: Copier le fichier via SSH
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.PORT }}
#          source: "target/mnsgarage.jar"
#          target: /opt/app/garage/ms-garage
#          strip_components: 1
#
#  run-jar:
#    name: Exécution du JAR
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Exécuter le JAR sur le serveur
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.PORT }}
#          script: |
#            ln -sf /opt/app/garage/ms-garage/mnsgarage.jar /etc/init.d/mnsgarage
#            /etc/init.d/mnsgarage start

#  docker:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/mnsgarage:latest
          
